version: '3.8'

name: intake24-dietician-dev

services:
  # main DB for the system
  i24-dietician-db:
    container_name: i24-dietician-db
    image: postgres:16-alpine # always specify ther exact version
    env_file:
      - ./.env
    networks:
      - backend
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./init:/docker-entrypoint-initdb.d/
      - ./data-db:/var/lib/postgresql/data
    restart: on-failure:3

  # Db for the storing recall Data
  i24-dietician-recall-db:
    container_name: i24-dietician-recall-db # always specify ther exact version
    image: mongo:7.0.2-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_RECAL_DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_RECAL_DB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_RECAL_DB_NAME}
      MONGO_RECAL_DB_NAME: ${MONGO_RECAL_DB_NAME}
      MONGO_RECAL_DB_USERNAME: ${MONGO_RECAL_DB_USERNAME}
      MONGO_RECAL_DB_PASSWORD: ${MONGO_RECAL_DB_PASSWORD}
    networks:
      - backend
    restart: unless-stopped
    ports:
      - ${MONGO_RECALL_DB_PORT}:27017

    volumes:
      - ./mongo_db/db:/data/db
      - ./init/mongo_db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    command: ['--auth']

  redis:
    image: redis:latest
    command: redis-server
    env_file:
      - ../apps/api/.env.development
    volumes:
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - redis-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    env_file:
      - ../apps/api/.env.development
    ports:
      - ${REDIS_COMMANDER_PORT}:8081
    networks:
      - redis-network
    depends_on:
      - redis

volumes:
  redis:
  redis-config:
  local_pgdata:

networks:
  backend:
  redis-network:
    driver: bridge
